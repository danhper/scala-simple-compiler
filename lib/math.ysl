fun fact(n):
    res = 1
    for i in 2 to n:
        res *= i
    end
    res
end

fun get_sign(n):
    if n % 2 == 0:
       sign = 1
    else:
       sign = -1
    end
    sign
end

fun int_pow(x, n):
    res = 1
    for i in 1 to n:
        res *= x
    end
    res
end

fun to_double(x):
    x + 0.0
end

fun sin(x):
    res = 0
    for n in 0 to 30:
        sign = get_sign(n)
        numerator = sign * int_pow(x, 2 * n + 1)
        denominator = to_double(fact(2 * n + 1))
        res += numerator / denominator
    end
    res
end

fun cos(x):
    res = 0
    for n in 0 to 30:
        sign = get_sign(n)
        numerator = sign * int_pow(x, 2 * n)
        denominator = to_double(fact(2 * n))
        res += numerator / denominator
    end
    res
end

fun tan(x):
    sin(x) / cos(x)
end

fun ln(x):
    res = 0
    for n in 0 to 200:
        a = int_pow((x - 1.0) / (x + 1), 2 * n + 1)
        b = 1.0 / (2 * n + 1)
        res += a * b
    end
    res * 2
end

fun log(x, b):
    ln(x) / ln(b)
end

fun exp(x):
    res = 0
    for n in 0 to 100:
        res += to_double(int_pow(x, n)) / fact(n)
    end
    res
end

fun fib(n):
    fib_(n, 0, 1)
    fun fib_(n, acc0, acc1):
        if n == 0:
           acc0
        else:
           fib_(n - 1, acc1, acc0 + acc1)
        end
    end
end

fun abs(x):
    if x < 0:
       -x
    else:
        x
    end
end

fun sqrt(x):
    x ^ 0.5
end